[project]
name = "tabatu"
version = "0.1.0"
description = "TÃ¡buas atuariais em C++ com interface em Python."
readme = "README.md"
requires-python = ">=3.7"
license = { file = "LICENSE" }
keywords = ["lifetable", "actuary"]
authors = [
    { name = "Vitor Capdeville", email = "vgcapdeville@hotmail.com" } # Optional
]
maintainers = [
    { name = "Vitor Capdeville", email = "vgcapdeville@hotmail.com" } # Optional
]
dependencies = ["numpy"]

[project.optional-dependencies] # Optional
dev = ["Cython"]
#test = ["coverage"]

[project.urls]  # Optional
"Homepage" = "https://github.com/vitorcapdeville/tabuas-atuariais"
"Bug Reports" = "https://github.com/vitorcapdeville/tabuas-atuariais/issues"
"Source" = "https://github.com/vitorcapdeville/tabuas-atuariais"

[build-system]
# These are the assumed default build requirements from pip:
# https://pip.pypa.io/en/stable/reference/pip/#pep-517-and-518-support
requires = ["setuptools>=43.0.0", "wheel", "Cython"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]
doctest_optionflags = "NUMBER"

[semantic_release]
assets = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
tag_format = "v{version}"

[semantic_release.branches.main]
match = "(main|master)"
prerelease = false
prerelease_token = "rc"

[semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false

[semantic_release.remote.token]
env = "GH_TOKEN"

[semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

[tool.semantic_release]
version_variables = ["pyproject.toml:version"]
build_command = "python -m pip install build && python -m build"
